{
  "entityType" : "RULE_CHAIN",
  "entity" : {
    "additionalInfo" : null,
    "configuration" : null,
    "debugMode" : false,
    "externalId" : null,
    "firstRuleNodeId" : {
      "entityType" : "RULE_NODE",
      "id" : "d4b12cb0-3a93-11f0-96f4-672ec1447afa"
    },
    "id" : {
      "entityType" : "RULE_CHAIN",
      "id" : "d49ce160-3a93-11f0-96f4-672ec1447afa"
    },
    "name" : "Root Rule Chain",
    "root" : true,
    "type" : "CORE"
  },
  "metaData" : {
    "connections" : [ {
      "fromIndex" : 2,
      "toIndex" : 0,
      "type" : "Post telemetry"
    }, {
      "fromIndex" : 2,
      "toIndex" : 1,
      "type" : "Post attributes"
    }, {
      "fromIndex" : 2,
      "toIndex" : 3,
      "type" : "RPC Request from Device"
    }, {
      "fromIndex" : 2,
      "toIndex" : 4,
      "type" : "Other"
    }, {
      "fromIndex" : 2,
      "toIndex" : 5,
      "type" : "RPC Request to Device"
    }, {
      "fromIndex" : 2,
      "toIndex" : 10,
      "type" : "Timeseries Updated"
    }, {
      "fromIndex" : 2,
      "toIndex" : 16,
      "type" : "Attributes Updated"
    }, {
      "fromIndex" : 2,
      "toIndex" : 16,
      "type" : "Post attributes"
    }, {
      "fromIndex" : 2,
      "toIndex" : 21,
      "type" : "Entity Created"
    }, {
      "fromIndex" : 6,
      "toIndex" : 2,
      "type" : "Success"
    }, {
      "fromIndex" : 8,
      "toIndex" : 7,
      "type" : "Success"
    }, {
      "fromIndex" : 9,
      "toIndex" : 8,
      "type" : "Success"
    }, {
      "fromIndex" : 10,
      "toIndex" : 14,
      "type" : "True"
    }, {
      "fromIndex" : 11,
      "toIndex" : 12,
      "type" : "Success"
    }, {
      "fromIndex" : 12,
      "toIndex" : 13,
      "type" : "Success"
    }, {
      "fromIndex" : 14,
      "toIndex" : 15,
      "type" : "Success"
    }, {
      "fromIndex" : 15,
      "toIndex" : 11,
      "type" : "Success"
    }, {
      "fromIndex" : 16,
      "toIndex" : 17,
      "type" : "True"
    }, {
      "fromIndex" : 17,
      "toIndex" : 18,
      "type" : "Success"
    }, {
      "fromIndex" : 18,
      "toIndex" : 20,
      "type" : "Success"
    }, {
      "fromIndex" : 20,
      "toIndex" : 19,
      "type" : "Success"
    } ],
    "firstNodeIndex" : 6,
    "nodes" : [ {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 824,
        "layoutY" : 156
      },
      "configuration" : {
        "defaultTTL" : 0,
        "useServerTs" : false,
        "processingSettings" : {
          "type" : "ON_EVERY_MESSAGE"
        }
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757282592983,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4af09d0-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "Save Timeseries",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 825,
        "layoutY" : 52
      },
      "configuration" : {
        "processingSettings" : {
          "type" : "ON_EVERY_MESSAGE"
        },
        "scope" : "CLIENT_SCOPE",
        "notifyDevice" : false,
        "sendAttributesUpdatedNotification" : false,
        "updateAttributesOnlyOnValueChange" : true
      },
      "configurationVersion" : 3,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4afcd20-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "Save Client Attributes",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : null,
        "layoutX" : 347,
        "layoutY" : 149
      },
      "configuration" : {
        "version" : 0
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757784574890,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4b01b40-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "Message Type Switch",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbMsgTypeSwitchNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 825,
        "layoutY" : 266
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4b06960-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "Log RPC from Device",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 825,
        "layoutY" : 379
      },
      "configuration" : {
        "scriptLang" : "TBEL",
        "jsScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);",
        "tbelScript" : "return '\\nIncoming message:\\n' + JSON.stringify(msg) + '\\nIncoming metadata:\\n' + JSON.stringify(metadata);"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4b09070-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "Log Other",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.action.TbLogNode"
    }, {
      "additionalInfo" : {
        "layoutX" : 825,
        "layoutY" : 468
      },
      "configuration" : {
        "timeoutInSeconds" : 60
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4b0de90-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "RPC Call Request",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rpc.TbSendRPCRequestNode"
    }, {
      "additionalInfo" : {
        "description" : "Process incoming messages from devices with the alarm rules defined in the device profile. Dispatch all incoming messages with \"Success\" relation type.",
        "layoutX" : 195,
        "layoutY" : 238
      },
      "configuration" : {
        "persistAlarmRulesState" : false,
        "fetchAlarmRulesStateOnStart" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757784491497,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "d4b12cb0-3a93-11f0-96f4-672ec1447afa"
      },
      "name" : "Device Profile Node",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.profile.TbDeviceProfileNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 6,
        "layoutY" : 765
      },
      "configuration" : {
        "restEndpointUrlPattern" : "https://api.telegram.org/bot7813852758:AAFImPbdVAnfT8Y0Ty2lW6ku0zVHzREF9TM/sendMessage",
        "requestMethod" : "POST",
        "useSimpleClientHttpFactory" : false,
        "parseToPlainText" : false,
        "ignoreRequestBody" : false,
        "enableProxy" : false,
        "useSystemProxyProperties" : false,
        "proxyScheme" : null,
        "proxyHost" : null,
        "proxyPort" : 0,
        "proxyUser" : null,
        "proxyPassword" : null,
        "readTimeoutMs" : 0,
        "maxParallelRequestsCount" : 0,
        "headers" : {
          "Content-Type" : "application/json"
        },
        "credentials" : {
          "type" : "anonymous"
        },
        "maxInMemoryBufferSizeInKb" : 256
      },
      "configurationVersion" : 3,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 0,
        "failuresEnabled" : false
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "6b6c83a0-4261-11f0-bbbd-d5b23296cf03"
      },
      "name" : "telegram",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.rest.TbRestApiCallNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 10,
        "layoutY" : 667
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var newMsgList = [];\r\nvar alarmText = 'ðŸš¨ *Alarma activada*\\n\\nðŸ”” *' + msg.name + '*\\nðŸ“Ÿ Dispositivo: ' + metadata.deviceName +\r\n                '\\nðŸ“Š Datos: ' + msg.details.data;\r\n\r\n// El atributo `telegramSubs` debe estar disponible en metadata (usÃ¡ un nodo de enrichment antes)\r\nvar subs = metadata.telegramSubs ? JSON.parse(metadata.telegramSubs) : {};\r\n\r\nfor (var chatId in subs) {\r\n    if (subs[chatId]) {\r\n        newMsgList.push({\r\n            msg: {\r\n                text: alarmText,\r\n                chat_id: parseInt(chatId)\r\n            },\r\n            metadata: metadata,\r\n            msgType: msgType\r\n        });\r\n    }\r\n}\r\n\r\nreturn newMsgList;",
        "tbelScript" : "var newMsgList = [];\r\nvar alarmText = 'ðŸš¨ *Alarma activada*\\n\\nðŸ”” *' + msg.name + '*\\nðŸ“Ÿ Dispositivo: ' + metadata.deviceName +\r\n                '\\nðŸ“Š Datos: ' + msg.details.data;\r\n\r\n// El atributo `telegramSubs` debe estar disponible en metadata (usÃ¡ un nodo de enrichment antes)\r\nvar subs = metadata.telegramSubs ? JSON.parse(metadata.telegramSubs) : {};\r\n\r\nfor (var chatId in subs) {\r\n    if (subs[chatId]) {\r\n        newMsgList.push({\r\n            msg: {\r\n                text: alarmText,\r\n                chat_id: parseInt(chatId)\r\n            },\r\n            metadata: metadata,\r\n            msgType: msgType\r\n        });\r\n    }\r\n}\r\n\r\nreturn newMsgList;"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1749168483943,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "6b6cd1c0-4261-11f0-bbbd-d5b23296cf03"
      },
      "name" : "script",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 19,
        "layoutY" : 575
      },
      "configuration" : {
        "dataToFetch" : "ATTRIBUTES",
        "dataMapping" : {
          "telegramSubs" : "telegramSubs"
        },
        "fetchTo" : "METADATA"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1749168442242,
        "failuresEnabled" : false
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "1f96bd90-4268-11f0-bbbd-d5b23296cf03"
      },
      "name" : "atributos customer",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetCustomerAttributeNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1072,
        "layoutY" : 244
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// True si el payload trae chat del usuario\r\n\r\nvar raw = msg.timeseries[0].values.chat\r\nif (!raw) return false;\r\ntry { raw = typeof raw === 'string' ? JSON.parse(raw) : raw; } catch(e) {}\r\nreturn raw && raw.role === 'user' && (raw.content || '').trim().length > 0;\r\n",
        "tbelScript" : ""
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757283408703,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "46a96520-8c34-11f0-8d0c-9de3d92fa448"
      },
      "name" : "is User Chat?",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1065,
        "layoutY" : 486
      },
      "configuration" : {
        "modelId" : {
          "entityType" : "AI_MODEL",
          "id" : "7988ff90-8b63-11f0-8d0c-9de3d92fa448"
        },
        "systemPrompt" : "Sos un asistente IoT agro en espaÃ±ol, de argentina, tu nombre es Nexi. RespondÃ© breve y claro a lo que escriba el usuario.\nPrimero centrate en el ultimo mensaje, y despues si necesitas busca contexto en el historial.\nSi te piden datos de algun dispositivo, comparacion o lo que sea, y no tenes el dato, inventalo ya que necesito hacer mockups para el brochure.",
        "userPrompt" : "$[*]",
        "responseFormat" : {
          "type" : "TEXT"
        },
        "timeoutSeconds" : 60,
        "forceAck" : true
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757888023059,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "fc0b7fa0-8c36-11f0-8d0c-9de3d92fa448"
      },
      "name" : "chatbot",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.ai.TbAiNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1063,
        "layoutY" : 568
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// Empaquetar respuesta del modelo en formato chat\r\nvar text = msg.response || '';\r\nvar out = {\r\n  role: 'assistant',\r\n  content: text,\r\n  ts: Date.now()\r\n};\r\nvar payload = { chat: JSON.stringify(out) };\r\n\r\n// Devolvemos listo para Save Time Series\r\nreturn { msg: payload, metadata: metadata, msgType: 'POST_TELEMETRY_REQUEST' };\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757283723308,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "fc0bf4d0-8c36-11f0-8d0c-9de3d92fa448"
      },
      "name" : "send msg",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1062,
        "layoutY" : 648
      },
      "configuration" : {
        "processingSettings" : {
          "type" : "ON_EVERY_MESSAGE"
        },
        "defaultTTL" : 0,
        "useServerTs" : false
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757283819955,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "35b994d0-8c37-11f0-8d0c-9de3d92fa448"
      },
      "name" : "save chat",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1065,
        "layoutY" : 323
      },
      "configuration" : {
        "latestTsKeyNames" : [ "chat" ],
        "aggregation" : "NONE",
        "fetchMode" : "ALL",
        "orderBy" : "DESC",
        "limit" : 5,
        "useMetadataIntervalPatterns" : false,
        "startIntervalPattern" : "",
        "endIntervalPattern" : "",
        "startInterval" : 2,
        "startIntervalTimeUnit" : "HOURS",
        "endInterval" : 1,
        "endIntervalTimeUnit" : "MILLISECONDS"
      },
      "configurationVersion" : 2,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757285745851,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "64dc9e90-8c39-11f0-8d0c-9de3d92fa448"
      },
      "name" : "fetch chat history",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetTelemetryNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 1064,
        "layoutY" : 405
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "var historyArr = [];\r\nif (metadata.chat) {\r\n  if (typeof metadata.chat === 'string') {\r\n    // caso raro: viene como string JSON de array\r\n    try { historyArr = JSON.parse(metadata.chat); } catch(e) { historyArr = []; }\r\n  } else if (Array.isArray(metadata.chat)) {\r\n    historyArr = metadata.chat;\r\n  } else {\r\n    historyArr = [];\r\n  }\r\n}\r\n\r\nvar parts = [];\r\nfor (var i = 0; i < historyArr.length; i++) {\r\n  var it = historyArr[i];\r\n  if (!it || !it.value) continue;\r\n  try {\r\n    var obj = JSON.parse(it.value);\r\n    var who = obj.role === 'user' ? 'Usuario' : 'Asistente';\r\n    parts.push(who + ': ' + obj.content);\r\n  } catch (e) {\r\n    // fallback por si value no es JSON\r\n    parts.push(String(it.value));\r\n  }\r\n}\r\n\r\n// quedate con los Ãºltimos 25\r\nvar last25 = parts.slice(-25);\r\nmsg.history = last25.join('\\n');\r\n\r\nreturn { msg: msg, metadata: metadata, msgType: msgType };\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757285153285,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "505f4ca0-8c3a-11f0-8d0c-9de3d92fa448"
      },
      "name" : "trans",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 382,
        "layoutY" : 353
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "return 'receiveEmail' in msg ",
        "tbelScript" : "var raw = msg.receiveEmail\r\nif (!raw) return false;\r\ntry { raw = typeof raw === 'string' ? JSON.parse(raw) : raw; } catch(e) {}\r\nreturn raw && raw.role === 'user' && (raw.content || '').trim().length > 0;\r\n"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757788026651,
        "failuresEnabled" : true
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "acf718b0-90c4-11f0-8d0c-9de3d92fa448"
      },
      "name" : "is EmailNoti",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.filter.TbJsFilterNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 382,
        "layoutY" : 435
      },
      "configuration" : {
        "dataToFetch" : "ATTRIBUTES",
        "dataMapping" : {
          "emailRecipients" : "emailRecipients"
        },
        "fetchTo" : "METADATA"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757787437321,
        "failuresEnabled" : false
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "29255710-90c7-11f0-8d0c-9de3d92fa448"
      },
      "name" : "search email recipients",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.metadata.TbGetCustomerAttributeNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 371,
        "layoutY" : 518
      },
      "configuration" : {
        "scriptLang" : "JS",
        "jsScript" : "// IN:\r\n//  - metadata.userEmail (string)\r\n//  - metadata.emailRecipients (string u objeto)  <-- atributo actual del Customer\r\n//  - msg.receiveEmail (bool | \"true\"/\"false\" | 1/0)\r\n// OUT:\r\n//  - msg = { emailRecipients: \"<json...>\" }     <-- guardar en Customer (SERVER attr)\r\n//  - metadata.recipientsCsv = \"a@x.com,b@y.com\"\r\n\r\nfunction toBool(v) {\r\n  if (typeof v === 'boolean') return v;\r\n  if (typeof v === 'number') return v !== 0;\r\n  if (typeof v === 'string') return v.trim().toLowerCase() === 'true' || v.trim() === '1';\r\n  return false;\r\n}\r\n\r\nfunction parseRecipients(raw) {\r\n  if (raw == null || raw === '') return { recipients: [] };\r\n  var data = raw;\r\n  if (typeof raw === 'string') {\r\n    try { data = JSON.parse(raw); } catch (e) {\r\n      // Si era CSV simple, lo convertimos\r\n      var arr = raw.split(',').map(function(s){return s.trim();}).filter(Boolean);\r\n      return { recipients: arr.map(function(e){ return { email: e, enabled: true }; }) };\r\n    }\r\n  }\r\n  if (Array.isArray(data)) return { recipients: data };\r\n  if (data && Array.isArray(data.recipients)) return { recipients: data.recipients };\r\n  return { recipients: [] };\r\n}\r\n\r\nvar email = (metadata.userEmail || '').trim();\r\nif (!email) {\r\n  metadata.mergeError = 'Falta metadata.userEmail';\r\n  return { msg: { /* no guarda */ }, metadata: metadata, msgType: msgType };\r\n}\r\n\r\nvar want = toBool(msg.receiveEmail != null ? msg.receiveEmail : msg['receiveEmail']);\r\n\r\n// Estado actual del Customer\r\nvar store = parseRecipients(metadata.emailRecipients || msg.emailRecipients);\r\nvar list = store.recipients\r\n  .filter(function(r){ return r && r.email; })\r\n  .map(function(r){\r\n    return { email: String(r.email).trim(), enabled: toBool(r.enabled) };\r\n  });\r\n\r\n// Upsert por email (case-insensitive)\r\nvar found = false, i;\r\nfor (i = 0; i < list.length; i++) {\r\n  if (list[i].email.toLowerCase() === email.toLowerCase()) {\r\n    list[i].enabled = want;\r\n    found = true;\r\n    break;\r\n  }\r\n}\r\nif (!found) list.push({ email: email, enabled: want });\r\n\r\n// Dedupe manteniendo la Ãºltima\r\nvar seen = {};\r\nfor (i = list.length - 1; i >= 0; i--) {\r\n  var k = list[i].email.toLowerCase();\r\n  if (seen[k]) list.splice(i, 1); else seen[k] = 1;\r\n}\r\n\r\n// (Opcional) ordenar por email\r\nlist.sort(function(a,b){\r\n  var A = a.email.toLowerCase(), B = b.email.toLowerCase();\r\n  return A < B ? -1 : (A > B ? 1 : 0);\r\n});\r\n\r\nvar updated = { recipients: list };\r\n\r\n// Salidas\r\nmetadata.recipientsCsv = list.filter(function(r){ return toBool(r.enabled); })\r\n                             .map(function(r){ return r.email; })\r\n                             .join(',');\r\n\r\n// Para no guardar keys de mÃ¡s, dejamos solo la que queremos persistir\r\nmsg = { emailRecipients: JSON.stringify(updated) };\r\n\r\nreturn { msg: msg, metadata: metadata, msgType: \"POST_ATTRIBUTES_REQUEST\" };\r\n",
        "tbelScript" : "return {msg: msg, metadata: metadata, msgType: msgType};"
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757790077615,
        "failuresEnabled" : false
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "347e35a0-90cc-11f0-8d0c-9de3d92fa448"
      },
      "name" : "change notification status",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbTransformMsgNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 369,
        "layoutY" : 680
      },
      "configuration" : {
        "processingSettings" : {
          "type" : "ON_EVERY_MESSAGE"
        },
        "scope" : "SERVER_SCOPE",
        "notifyDevice" : false,
        "sendAttributesUpdatedNotification" : true,
        "updateAttributesOnlyOnValueChange" : false
      },
      "configurationVersion" : 3,
      "createdTime" : 0,
      "debugSettings" : {
        "allEnabled" : false,
        "allEnabledUntil" : 1757789897016,
        "failuresEnabled" : false
      },
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "e39fbc70-90cc-11f0-8d0c-9de3d92fa448"
      },
      "name" : "save attribute",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.telemetry.TbMsgAttributesNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 365,
        "layoutY" : 606
      },
      "configuration" : {
        "originatorSource" : "CUSTOMER",
        "relationsQuery" : {
          "direction" : "FROM",
          "maxLevel" : 1,
          "filters" : [ {
            "relationType" : "Contains",
            "entityTypes" : [ ],
            "negate" : false
          } ],
          "fetchLastLevelOnly" : false
        },
        "entityType" : null,
        "entityNamePattern" : null
      },
      "configurationVersion" : 0,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "4252cd20-90d2-11f0-8d0c-9de3d92fa448"
      },
      "name" : "originator",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.transform.TbChangeOriginatorNode"
    }, {
      "additionalInfo" : {
        "description" : "",
        "layoutX" : 408,
        "layoutY" : 45
      },
      "configuration" : {
        "forwardMsgToDefaultRuleChain" : false,
        "ruleChainId" : "a7b8a5e0-8876-11f0-bbbd-d5b23296cf03"
      },
      "configurationVersion" : 1,
      "createdTime" : 0,
      "debugSettings" : null,
      "externalId" : null,
      "id" : {
        "entityType" : "RULE_NODE",
        "id" : "454035d0-90e2-11f0-8d0c-9de3d92fa448"
      },
      "name" : "call assignment",
      "queueName" : null,
      "ruleChainId" : null,
      "singletonMode" : false,
      "type" : "org.thingsboard.rule.engine.flow.TbRuleChainInputNode"
    } ],
    "ruleChainConnections" : null
  },
  "relations" : [ {
    "additionalInfo" : null,
    "from" : {
      "entityType" : "RULE_CHAIN",
      "id" : "d49ce160-3a93-11f0-96f4-672ec1447afa"
    },
    "to" : {
      "entityType" : "RULE_CHAIN",
      "id" : "a7b8a5e0-8876-11f0-bbbd-d5b23296cf03"
    },
    "type" : "Uses",
    "typeGroup" : "COMMON",
    "version" : 19243
  } ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}